<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .dashboard-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }
        .chart-container {
            flex: 1;
            min-width: 300px;
            height: 300px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px;
            box-sizing: border-box;
        }
        .chart-title {
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }
        .stats-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 15px;
            margin-bottom: 20px;
        }
        .stats-title {
            font-size: 1.2em;
            margin-bottom: 10px;
            color: #444;
        }
        .stats-value {
            font-size: 2em;
            font-weight: bold;
        }
        .stats-value.activos {
            color: #28a745;
        }
        .stats-value.inactivos {
            color: #dc3545;
        }
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 4px;
        }
        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .date-filter {
            display: flex;
            gap: 10px;
            align-items: center;
            margin-bottom: 20px;
            padding: 15px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .date-filter button {
            padding: 8px 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <%- include('../partials/header') %>

    <main class="container">
        <h2>Estadísticas de Usuarios</h2>

        <% if (typeof error !== 'undefined') { %>
            <div class="alert alert-danger"><%= error %></div>
        <% } %>

        <!-- Filtro por fecha -->
        <form method="GET" class="date-filter">
            <label>Desde:</label>
            <input type="date" name="inicio" value="<%= fechaInicio %>">
            <label>Hasta:</label>
            <input type="date" name="fin" value="<%= fechaFin %>">
            <button type="submit">Filtrar</button>
        </form>

        <div class="dashboard-container">
            <!-- Tarjetas de resumen -->
            <div class="stats-card">
                <div class="stats-title">Empleados Activos</div>
                <div class="stats-value activos"><%= empleados.activos %></div>
            </div>
            
            <div class="stats-card">
                <div class="stats-title">Empleados Inactivos</div>
                <div class="stats-value inactivos"><%= empleados.inactivos %></div>
            </div>
            
            <div class="stats-card">
                <div class="stats-title">Clientes Activos</div>
                <div class="stats-value activos"><%= clientes.activos %></div>
            </div>
            
            <div class="stats-card">
                <div class="stats-title">Clientes Inactivos</div>
                <div class="stats-value inactivos"><%= clientes.inactivos %></div>
            </div>
        </div>

        <div class="dashboard-container">
            <!-- Gráfico de empleados -->
            <div class="chart-container">
                <h3 class="chart-title">Estado de Empleados</h3>
                <canvas id="empleadosChart"></canvas>
            </div>
            
            <!-- Gráfico de clientes -->
            <div class="chart-container">
                <h3 class="chart-title">Estado de Clientes</h3>
                <canvas id="clientesChart"></canvas>
            </div>
        </div>

        <div class="dashboard-container">
            <!-- Gráfico de reparaciones -->
            <div class="chart-container">
                <h3 class="chart-title">Estado de Reparaciones</h3>
                <canvas id="reparacionesChart"></canvas>
            </div>
            
            <!-- Gráfico de ganancias diarias -->
            <div class="chart-container">
                <h3 class="chart-title">Ganancias Diarias</h3>
                <canvas id="gananciasChart"></canvas>
            </div>
        </div>

        <!-- Tarjeta de ganancias totales -->
        <div class="stats-card">
            <div class="stats-title">Ganancias Totales</div>
            <div class="stats-value" style="color: #17a2b8;">L. <%= ganancias.toFixed(2) %></div>
            <small>Del <%= fechaInicio %> al <%= fechaFin %></small>
        </div>
    </main>

    <%- include('../partials/footer') %>

    <script>
        // Datos para los gráficos
        const empleadosData = {
            activos: <%= empleados.activos %>,
            inactivos: <%= empleados.inactivos %>
        };

        const clientesData = {
            activos: <%= clientes.activos %>,
            inactivos: <%= clientes.inactivos %>
        };

        const reparacionesData = {
            pagadas: <%= reparaciones.pagadas %>,
            noPagadas: <%= reparaciones.noPagadas %>
        };

        // Configuración común para gráficos circulares
        const doughnutOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return `${context.label}: ${context.raw} (${context.parsed}%)`;
                        }
                    }
                }
            }
        };

        // Gráfico de empleados
        const empleadosCtx = document.getElementById('empleadosChart').getContext('2d');
        new Chart(empleadosCtx, {
            type: 'doughnut',
            data: {
                labels: ['Activos', 'Inactivos'],
                datasets: [{
                    data: [empleadosData.activos, empleadosData.inactivos],
                    backgroundColor: ['#28a745', '#dc3545'],
                    borderWidth: 1
                }]
            },
            options: doughnutOptions
        });

        // Gráfico de clientes
        const clientesCtx = document.getElementById('clientesChart').getContext('2d');
        new Chart(clientesCtx, {
            type: 'doughnut',
            data: {
                labels: ['Activos', 'Inactivos'],
                datasets: [{
                    data: [clientesData.activos, clientesData.inactivos],
                    backgroundColor: ['#28a745', '#dc3545'],
                    borderWidth: 1
                }]
            },
            options: doughnutOptions
        });

        // Gráfico de reparaciones
        const reparacionesCtx = document.getElementById('reparacionesChart').getContext('2d');
        new Chart(reparacionesCtx, {
            type: 'doughnut',
            data: {
                labels: ['Pagadas', 'No Pagadas'],
                datasets: [{
                    data: [reparacionesData.pagadas, reparacionesData.noPagadas],
                    backgroundColor: ['#17a2b8', '#ffc107'],
                    borderWidth: 1
                }]
            },
            options: doughnutOptions
        });

        // Gráfico de ganancias diarias (barras)
        const gananciasPorDia = <%- JSON.stringify(gananciasPorDia) %>;
        const gananciasLabels = gananciasPorDia.map(item => item.dia);
        const gananciasValues = gananciasPorDia.map(item => item.total);

        const gananciasCtx = document.getElementById('gananciasChart').getContext('2d');
        new Chart(gananciasCtx, {
            type: 'bar',
            data: {
                labels: gananciasLabels,
                datasets: [{
                    label: 'Ganancias (L.)',
                    data: gananciasValues,
                    backgroundColor: 'rgba(23, 162, 184, 0.7)',
                    borderColor: 'rgba(23, 162, 184, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `L. ${context.raw.toFixed(2)}`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return 'L. ' + value;
                            }
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>